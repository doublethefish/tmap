<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="layout_8hh" kind="file" language="C++">
    <compoundname>layout.hh</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includes local="no">ogdf/basic/Graph.h</includes>
    <includes local="no">ogdf/basic/GraphAttributes.h</includes>
    <includes local="no">ogdf/basic/extended_graph_alg.h</includes>
    <includes local="no">ogdf/fileformats/GraphIO.h</includes>
    <includes local="no">ogdf/energybased/FastMultipoleEmbedder.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/ScalingLayout.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/BarycenterPlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/CirclePlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/MedianPlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/RandomPlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/SolarPlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/ZeroPlacer.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/EdgeCoverMerger.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/IndependentSetMerger.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/LocalBiconnectedMerger.h</includes>
    <includes local="no">ogdf/energybased/multilevel_mixer/SolarMerger.h</includes>
    <includes local="no">ogdf/basic/PreprocessorLayout.h</includes>
    <includes local="no">ogdf/packing/ComponentSplitterLayout.h</includes>
    <includes local="no">ogdf/packing/TileToRowsCCPacker.h</includes>
    <includes local="no">ogdf/energybased/FMMMLayout.h</includes>
    <includes local="no">ogdf/energybased/SpringEmbedderGridVariant.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">typeinfo</includes>
    <includedby refid="bindings_8cc" local="yes">tmap/bindings.cc</includedby>
    <includedby refid="lshforest_8hh" local="yes">tmap/lshforest.hh</includedby>
    <includedby refid="layout_8cc" local="yes">tmap/layout.cc</includedby>
    <incdepgraph>
      <node id="147">
        <label>ogdf/packing/TileToRowsCCPacker.h</label>
      </node>
      <node id="126">
        <label>stdint.h</label>
      </node>
      <node id="146">
        <label>ogdf/packing/ComponentSplitterLayout.h</label>
      </node>
      <node id="144">
        <label>ogdf/energybased/multilevel_mixer/SolarMerger.h</label>
      </node>
      <node id="139">
        <label>ogdf/energybased/multilevel_mixer/SolarPlacer.h</label>
      </node>
      <node id="131">
        <label>ogdf/basic/extended_graph_alg.h</label>
      </node>
      <node id="129">
        <label>ogdf/basic/Graph.h</label>
      </node>
      <node id="150">
        <label>fstream</label>
      </node>
      <node id="134">
        <label>ogdf/energybased/multilevel_mixer/ScalingLayout.h</label>
      </node>
      <node id="133">
        <label>ogdf/energybased/FastMultipoleEmbedder.h</label>
      </node>
      <node id="148">
        <label>ogdf/energybased/FMMMLayout.h</label>
      </node>
      <node id="149">
        <label>ogdf/energybased/SpringEmbedderGridVariant.h</label>
      </node>
      <node id="152">
        <label>typeinfo</label>
      </node>
      <node id="127">
        <label>tuple</label>
      </node>
      <node id="145">
        <label>ogdf/basic/PreprocessorLayout.h</label>
      </node>
      <node id="142">
        <label>ogdf/energybased/multilevel_mixer/IndependentSetMerger.h</label>
      </node>
      <node id="128">
        <label>vector</label>
      </node>
      <node id="140">
        <label>ogdf/energybased/multilevel_mixer/ZeroPlacer.h</label>
      </node>
      <node id="137">
        <label>ogdf/energybased/multilevel_mixer/MedianPlacer.h</label>
      </node>
      <node id="135">
        <label>ogdf/energybased/multilevel_mixer/BarycenterPlacer.h</label>
      </node>
      <node id="151">
        <label>iostream</label>
      </node>
      <node id="130">
        <label>ogdf/basic/GraphAttributes.h</label>
      </node>
      <node id="132">
        <label>ogdf/fileformats/GraphIO.h</label>
      </node>
      <node id="138">
        <label>ogdf/energybased/multilevel_mixer/RandomPlacer.h</label>
      </node>
      <node id="125">
        <label>tmap/layout.hh</label>
        <link refid="layout_8hh"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>ogdf/energybased/multilevel_mixer/LocalBiconnectedMerger.h</label>
      </node>
      <node id="136">
        <label>ogdf/energybased/multilevel_mixer/CirclePlacer.h</label>
      </node>
      <node id="141">
        <label>ogdf/energybased/multilevel_mixer/EdgeCoverMerger.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="156">
        <label>tmap/layout.cc</label>
        <link refid="layout_8cc"/>
      </node>
      <node id="154">
        <label>tmap/bindings.cc</label>
        <link refid="bindings_8cc"/>
      </node>
      <node id="157">
        <label>tmap/lshforest.cc</label>
        <link refid="lshforest_8cc"/>
      </node>
      <node id="155">
        <label>tmap/lshforest.hh</label>
        <link refid="lshforest_8hh"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>tmap/layout.hh</label>
        <link refid="layout_8hh"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtmap_1_1LayoutConfiguration" prot="public">tmap::LayoutConfiguration</innerclass>
    <innerclass refid="structtmap_1_1GraphProperties" prot="public">tmap::GraphProperties</innerclass>
    <innernamespace refid="namespacetmap">tmap</innernamespace>
    <briefdescription>
<para>Functions used for generating graph layouts from LSHForest instances and edge lists. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Probst (<ulink url="mailto:daenuprobst@gmail.com">daenuprobst@gmail.com</ulink>) </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>2019-06-17 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="comment">/*<sp/>Comments<sp/>for<sp/>the<sp/>documentation<sp/>are<sp/>(partially)<sp/>taken<sp/>from</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>&quot;An<sp/>Experimental<sp/>Evaluation<sp/>of<sp/>Multilevel<sp/>Layout<sp/>Methods&quot;</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>by<sp/>G.<sp/>Bartel<sp/>et<sp/>al.<sp/>and<sp/>the<sp/>OGDF<sp/>documentation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LAYOUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LAYOUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/basic/Graph.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/basic/GraphAttributes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/basic/extended_graph_alg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/fileformats/GraphIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/FastMultipoleEmbedder.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/ScalingLayout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/BarycenterPlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/CirclePlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/MedianPlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/RandomPlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/SolarPlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/ZeroPlacer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/EdgeCoverMerger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/IndependentSetMerger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/LocalBiconnectedMerger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/multilevel_mixer/SolarMerger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/basic/PreprocessorLayout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/packing/ComponentSplitterLayout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/packing/TileToRowsCCPacker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/FMMMLayout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ogdf/energybased/SpringEmbedderGridVariant.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetmap" kindref="compound">tmap</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration<sp/>of<sp/>LSHForest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LSHForest;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="layout_8hh_1afdc98947e81dc6f4c30f256e6f42f90b" refkind="member"><highlight class="keyword">enum<sp/>struct</highlight><highlight class="normal"><sp/><ref refid="layout_8hh_1afdc98947e81dc6f4c30f256e6f42f90b" kindref="member">Placer</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>Barycenter<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>Solar<sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>Circle<sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>Median<sp/>=<sp/>3,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Random<sp/>=<sp/>4,<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>Zero<sp/>=<sp/>5<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>placer_values[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Barycenter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Solar&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Circle&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Median&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Random&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Zero&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="layout_8hh_1a8c7bb9956a1a724233182a166cfdc0ff" refkind="member"><highlight class="keyword">enum<sp/>struct</highlight><highlight class="normal"><sp/><ref refid="layout_8hh_1a8c7bb9956a1a724233182a166cfdc0ff" kindref="member">Merger</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>EdgeCover<sp/>=</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>LocalBiconnected<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Solar<sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>IndependentSet<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>3<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>merger_values[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;EdgeCover&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LocalBiconnected&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Solar&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IndependentSet&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="layout_8hh_1a50ec215c9e54cf12b9dd0a0056160761" refkind="member"><highlight class="keyword">enum<sp/>struct</highlight><highlight class="normal"><sp/><ref refid="layout_8hh_1a50ec215c9e54cf12b9dd0a0056160761" kindref="member">ScalingType</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>Absolute<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>RelativeToAvgLength<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>RelativeToDesiredLength<sp/>=</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>RelativeToDrawing<sp/>=<sp/>3<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>scaling_types_values[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Absolute&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RelativeToAvgLength&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RelativeToDesiredLength&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RelativeToDrawing&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structtmap_1_1LayoutConfiguration" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135" refid="structtmap_1_1LayoutConfiguration_1a45335a69efe4408b49283554a3bb8875" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtmap_1_1LayoutConfiguration_1a45335a69efe4408b49283554a3bb8875" kindref="member">LayoutConfiguration</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>k(10)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>kc(10)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>fme_iterations(1000)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>fme_randomize(false)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>fme_threads(4)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>fme_precision(4)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sl_repeats(1)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sl_extra_scaling_steps(2)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sl_scaling_min(1.0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sl_scaling_max(1.0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sl_scaling_type(<ref refid="layout_8hh_1a50ec215c9e54cf12b9dd0a0056160761" kindref="member">ScalingType</ref>::RelativeToDrawing)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mmm_repeats(1)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>placer(<ref refid="layout_8hh_1afdc98947e81dc6f4c30f256e6f42f90b" kindref="member">Placer</ref>::Barycenter)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>merger(<ref refid="layout_8hh_1a8c7bb9956a1a724233182a166cfdc0ff" kindref="member">Merger</ref>::LocalBiconnected)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>merger_factor(2.0)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>merger_adjustment(0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>node_size(1.0<sp/>/<sp/>65.0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="structtmap_1_1LayoutConfiguration_1a498341508ea4806795f44e376af18e11" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structtmap_1_1LayoutConfiguration_1a498341508ea4806795f44e376af18e11" kindref="member">ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;k:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>std::to_string(k)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kc:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(kc)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fme_iterations:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(fme_iterations)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fme_randomize:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(fme_randomize)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fme_threads:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(fme_threads)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fme_precision:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(fme_threads)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sl_repeats:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sl_repeats)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sl_extra_scaling_steps:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sl_extra_scaling_steps)<sp/>+</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sl_scaling_x:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sl_scaling_min)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sl_scaling_y:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sl_scaling_max)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sl_scaling_type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>scaling_types_values[(int)sl_scaling_type]<sp/>+</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;mmm_repeats:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(mmm_repeats)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;placer:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>placer_values[(int)placer]<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;merger:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>merger_values[(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)merger]<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;merger_factor:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(merger_factor)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;merger_adjustment:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(merger_adjustment)<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;node_size&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(node_size);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structtmap_1_1LayoutConfiguration_1a80ddc818732d708764fbd83ad7b7d153" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1a80ddc818732d708764fbd83ad7b7d153" kindref="member">k</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kc;<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fme_iterations;<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fme_randomize;<sp/></highlight></codeline>
<codeline lineno="189" refid="structtmap_1_1LayoutConfiguration_1a7630a7d7513c3f51ea00802a3f67ba92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1a7630a7d7513c3f51ea00802a3f67ba92" kindref="member">fme_threads</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190" refid="structtmap_1_1LayoutConfiguration_1a9e4d43d8f65c21404cc9912c11a3eba7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1a9e4d43d8f65c21404cc9912c11a3eba7" kindref="member">fme_precision</ref>;<sp/></highlight></codeline>
<codeline lineno="191" refid="structtmap_1_1LayoutConfiguration_1adf81cfbcba521fd87a73dd25eb9c21e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1adf81cfbcba521fd87a73dd25eb9c21e7" kindref="member">sl_repeats</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="structtmap_1_1LayoutConfiguration_1aefd713cfba563ea8ee9a432c0359c440" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1aefd713cfba563ea8ee9a432c0359c440" kindref="member">sl_extra_scaling_steps</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="structtmap_1_1LayoutConfiguration_1af2e01075c5fe2a36c6018b40a6919d7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1af2e01075c5fe2a36c6018b40a6919d7a" kindref="member">sl_scaling_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194" refid="structtmap_1_1LayoutConfiguration_1aa29669e99b7e1df2bcb95d6379da7cc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1aa29669e99b7e1df2bcb95d6379da7cc3" kindref="member">sl_scaling_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="structtmap_1_1LayoutConfiguration_1a618d286e035eca76e0e464513624beec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="layout_8hh_1a50ec215c9e54cf12b9dd0a0056160761" kindref="member">ScalingType</ref><sp/><ref refid="structtmap_1_1LayoutConfiguration_1a618d286e035eca76e0e464513624beec" kindref="member">sl_scaling_type</ref>;<sp/></highlight></codeline>
<codeline lineno="196" refid="structtmap_1_1LayoutConfiguration_1aff2347eb71c98bbc72f16b4de32d4af0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtmap_1_1LayoutConfiguration_1aff2347eb71c98bbc72f16b4de32d4af0" kindref="member">mmm_repeats</ref>;<sp/></highlight></codeline>
<codeline lineno="197" refid="structtmap_1_1LayoutConfiguration_1ae81108ee33f42b2c084b540f902bbb7d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="layout_8hh_1afdc98947e81dc6f4c30f256e6f42f90b" kindref="member">Placer</ref><sp/><ref refid="structtmap_1_1LayoutConfiguration_1ae81108ee33f42b2c084b540f902bbb7d" kindref="member">placer</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="layout_8hh_1a8c7bb9956a1a724233182a166cfdc0ff" kindref="member">Merger</ref><sp/>merger;<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>merger_factor;<sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>merger_adjustment;<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>node_size;<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structtmap_1_1GraphProperties" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtmap_1_1GraphProperties" kindref="compound">GraphProperties</ref></highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219" refid="structtmap_1_1GraphProperties_1a51fa52c1cc9c8d382d507349e99447be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mst_weight<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="220" refid="structtmap_1_1GraphProperties_1a3467571c1e645268e55416504809f7c5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/>n_connected_components<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="221" refid="structtmap_1_1GraphProperties_1a954e8fd087b44b3c568ea07ae2f1efea" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/>n_isolated_vertices<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="222" refid="structtmap_1_1GraphProperties_1af4c85653b3bf56c6dbf19d7a38af40bc" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><ref refid="structtmap_1_1GraphProperties_1af4c85653b3bf56c6dbf19d7a38af40bc" kindref="member">degrees</ref>;<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;</highlight></codeline>
<codeline lineno="224" refid="structtmap_1_1GraphProperties_1a04c11168f810fdaf8b7bfecf96413ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1GraphProperties_1a04c11168f810fdaf8b7bfecf96413ba7" kindref="member">adjacency_list</ref>;<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal">};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">std::tuple&lt;std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1GraphProperties" kindref="compound">GraphProperties</ref>&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="layout_8hh_1a1b41a97f59e18234250f76085a7d437b" kindref="member">LayoutFromLSHForest</ref>(<ref refid="classtmap_1_1LSHForest" kindref="compound">LSHForest</ref>&amp;<sp/>lsh_forest,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref><sp/>config<sp/>=<sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref>(),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>create_mst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_lsh_forest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">std::tuple&lt;std::vector&lt;uint32_t&gt;,<sp/>std::vector&lt;uint32_t&gt;&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="layout_8hh_1a033d33fa567d893125d956e56933335f" kindref="member">MSTFromLSHForest</ref>(<ref refid="classtmap_1_1LSHForest" kindref="compound">LSHForest</ref>&amp;<sp/>lsh_forest,<sp/>uint32_t<sp/>k,<sp/>uint32_t<sp/>kc<sp/>=<sp/>10);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">std::tuple&lt;std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1GraphProperties" kindref="compound">GraphProperties</ref>&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="layout_8hh_1a780993ad8dd7e349b77f55895cc33451" kindref="member">LayoutFromEdgeList</ref>(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>uint32_t<sp/>vertex_count,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::tuple&lt;uint32_t,<sp/>uint32_t,<sp/>float&gt;&gt;&amp;<sp/>edges,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref><sp/>config<sp/>=<sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref>(),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>create_mst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">std::tuple&lt;std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1GraphProperties" kindref="compound">GraphProperties</ref>&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="layout_8hh_1a126dbc6ec8355732c528abb2877e60d4" kindref="member">LayoutInternal</ref>(ogdf::EdgeWeightedGraph&lt;float&gt;&amp;<sp/>g,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>vertex_count,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref><sp/>config,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtmap_1_1GraphProperties" kindref="compound">GraphProperties</ref>&amp;<sp/>gp);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">std::tuple&lt;std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="layout_8hh_1aeb4ec1a90d58bc1ba5f54412124cbf21" kindref="member">MakeEdgeList</ref>(std::vector&lt;float&gt;<sp/>x,<sp/>std::vector&lt;float&gt;<sp/>y,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>s,<sp/>std::vector&lt;uint32_t&gt;<sp/>t);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="tmap/layout.hh"/>
  </compounddef>
</doxygen>
